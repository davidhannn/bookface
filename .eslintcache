[{"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\user\\user.reducer.js":"1","C:\\Users\\david\\Desktop\\bookface\\src\\pages\\Homepage\\homepage.component.jsx":"2","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.sagas.js":"3","C:\\Users\\david\\Desktop\\bookface\\src\\components\\feed\\feed.component.jsx":"4","C:\\Users\\david\\Desktop\\bookface\\src\\index.js":"5","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.reducer.js":"6","C:\\Users\\david\\Desktop\\bookface\\src\\components\\form-input\\form-input.component.jsx":"7","C:\\Users\\david\\Desktop\\bookface\\src\\components\\register\\register.component.jsx":"8","C:\\Users\\david\\Desktop\\bookface\\src\\components\\custom-button\\custom-button.component.jsx":"9","C:\\Users\\david\\Desktop\\bookface\\src\\components\\create-post\\create-post.component.jsx":"10","C:\\Users\\david\\Desktop\\bookface\\src\\components\\header\\header.component.jsx":"11","C:\\Users\\david\\Desktop\\bookface\\src\\components\\image-upload\\image-upload.component.jsx":"12","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.types.js":"13","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.actions.js":"14","C:\\Users\\david\\Desktop\\bookface\\src\\utils\\helperFunctions.js":"15","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.selectors.js":"16","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\user\\user.sagas.js":"17","C:\\Users\\david\\Desktop\\bookface\\src\\components\\post\\post.component.jsx":"18","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\user\\user.types.js":"19","C:\\Users\\david\\Desktop\\bookface\\src\\pages\\UserPage\\userpage.component.jsx":"20","C:\\Users\\david\\Desktop\\bookface\\src\\components\\modal\\modal.component.jsx":"21","C:\\Users\\david\\Desktop\\bookface\\src\\App.js":"22","C:\\Users\\david\\Desktop\\bookface\\src\\components\\comment\\comment.component.jsx":"23","C:\\Users\\david\\Desktop\\bookface\\src\\components\\avatar\\avatar.component.jsx":"24"},{"size":975,"mtime":1607636137005,"results":"25","hashOfConfig":"26"},{"size":695,"mtime":1607641874537,"results":"27","hashOfConfig":"26"},{"size":2093,"mtime":1607748085484,"results":"28","hashOfConfig":"26"},{"size":1486,"mtime":1607751374488,"results":"29","hashOfConfig":"26"},{"size":447,"mtime":1607388955216,"results":"30","hashOfConfig":"26"},{"size":1146,"mtime":1607750066937,"results":"31","hashOfConfig":"26"},{"size":493,"mtime":1607388955210,"results":"32","hashOfConfig":"26"},{"size":2567,"mtime":1607388955214,"results":"33","hashOfConfig":"26"},{"size":253,"mtime":1607388955207,"results":"34","hashOfConfig":"26"},{"size":2680,"mtime":1607639755146,"results":"35","hashOfConfig":"26"},{"size":3418,"mtime":1607388955211,"results":"36","hashOfConfig":"26"},{"size":1714,"mtime":1607819621370,"results":"37","hashOfConfig":"26"},{"size":342,"mtime":1607637086310,"results":"38","hashOfConfig":"26"},{"size":745,"mtime":1607747270337,"results":"39","hashOfConfig":"26"},{"size":867,"mtime":1607574794586,"results":"40","hashOfConfig":"26"},{"size":287,"mtime":1607747784087,"results":"41","hashOfConfig":"26"},{"size":2676,"mtime":1607636007758,"results":"42","hashOfConfig":"26"},{"size":4838,"mtime":1607810465880,"results":"43","hashOfConfig":"26"},{"size":577,"mtime":1607635038279,"results":"44","hashOfConfig":"26"},{"size":1431,"mtime":1607822358492,"results":"45","hashOfConfig":"26"},{"size":2619,"mtime":1607821992321,"results":"46","hashOfConfig":"26"},{"size":2208,"mtime":1607635208538,"results":"47","hashOfConfig":"26"},{"size":476,"mtime":1607388955205,"results":"48","hashOfConfig":"26"},{"size":707,"mtime":1607822138542,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"158wv9s",{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\pages\\Homepage\\homepage.component.jsx",["106","107","108","109","110"],"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.sagas.js",["111","112","113","114"],"import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport { firestore, storage, auth, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport firebase from 'firebase'\r\n\r\nimport { fetchPostSuccess, fetchPostFailure, createPostSuccess, createPostFailure } from './post.actions';\r\n\r\nimport { snapShotToArray } from '../../utils/helperFunctions';\r\n\r\nimport PostActionTypes from './post.types';\r\n\r\nexport function* fetchPost() { \r\n\r\n    try {\r\n        const postRef = yield firestore.collection('posts').orderBy(\"timestamp\", \"desc\");\r\n        const snapshot = yield postRef.get();\r\n        console.log(snapshot);\r\n        const posts = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        console.log(posts);\r\n        yield put(fetchPostSuccess(posts))\r\n    } catch(error) {\r\n        yield put(fetchPostFailure(error))\r\n    }\r\n    // firestore.collection('posts').orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) => {\r\n    //     setPosts(snapshot.docs.map((doc) => \r\n    //         ({\r\n    //             id: doc.id,\r\n    //             data: doc.data()\r\n    //         })\r\n    //     ))\r\n    // })\r\n}\r\n\r\nexport function* createPost({ payload: { currentUser, fullPost } }) {\r\n    try {\r\n        const createPostRef = yield firestore.collection('posts').add({\r\n            firstName: currentUser.firstName,\r\n            lastName: currentUser.lastName,\r\n            userId: currentUser.id,\r\n            message: fullPost.post,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            image: fullPost.imageUrl,\r\n            likes: 0,\r\n        })\r\n\r\n        yield put(createPostSuccess(true));\r\n    } catch(error) {\r\n        yield put(createPostFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onFetchPostCollectionStart() {\r\n    yield takeLatest(PostActionTypes.FETCH_POST_START, fetchPost)\r\n}\r\n\r\nexport function* onCreatePostStart() {\r\n    yield takeLatest(PostActionTypes.CREATE_POST_START, createPost)\r\n}\r\n\r\nexport function* postSagas() {\r\n    yield all([call(onFetchPostCollectionStart), call(onCreatePostStart)])\r\n}",["115","116"],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\feed\\feed.component.jsx",["117","118"],"import React, {  useEffect, useState, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Post from '../../components/post/post.component';\r\n\r\nimport { auth, firestore } from '../../firebase/firebase.utils';\r\n\r\nimport './feed.styles.scss';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectAllPosts, selectAllPostsFetching } from '../../redux/post/post.selectors';\r\n\r\nimport { fetchPostStart } from '../../redux/post/post.actions';\r\n\r\n\r\nconst Feed = ({ post, fetchPostStart }) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        firestore.collection('posts').orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) => {\r\n            setPosts(snapshot.docs.map((doc) => \r\n                ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })\r\n            ))\r\n        })\r\n        // fetchPostStart()\r\n    }, [])\r\n\r\n\r\n    return (\r\n                <div className=\"feed\">\r\n                    {\r\n                        posts.map((post, id) => (\r\n                            <Post id={post.id} data={post.data} />\r\n                        ))\r\n                    }\r\n                </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    post: selectAllPosts, selectAllPostsFetching\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchPostStart: () => dispatch(fetchPostStart())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\r\n","C:\\Users\\david\\Desktop\\bookface\\src\\index.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.reducer.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\form-input\\form-input.component.jsx",[],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\register\\register.component.jsx",["119","120","121","122"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { signUp } from '../../redux/user/user.actions.js';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport './register.styles.scss';\r\n\r\nconst Register = () => {\r\n    const [userCredentials, setUserCredentials] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\", confirmPassword: \"\" });\r\n\r\n    const { firstName, lastName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // if (password !== confirmPassword ) {\r\n        //     alert('Passwords do not match. Try again')\r\n        //     return;\r\n        // }\r\n\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            await createUserProfileDocument(user, { firstName, lastName, email});\r\n\r\n            setUserCredentials({ firstName: \"\", lastName: \"\", email: \"\", password: \"\", confirmPassword: \"\" })\r\n        \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n        // signUp({ firstName, lastName, email, password});\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n    \r\n        setUserCredentials({ ...userCredentials, [name]: value })\r\n    }\r\n\r\n    return (\r\n                // <h2>Sign Up </h2>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <FormInput name=\"firstName\" type=\"text\" value={firstName} onChange={handleChange} label=\"First Name\" required/>\r\n                    <FormInput name=\"lastName\" type=\"text\" value={lastName} onChange={handleChange} label=\"Last Name\" required/>\r\n                    <FormInput name=\"email\" type=\"email\" value={email} type=\"email\" onChange={handleChange} label=\"Email\" required />\r\n                    <FormInput name=\"password\" type=\"password\" value={password} type=\"password\" onChange={handleChange} label=\"Password\" required />\r\n                    <FormInput name=\"confirmPassword\" type=\"password\" value={confirmPassword} type=\"password\" onChange={handleChange} label=\"Confirm Password\" required/>\r\n                    <CustomButton type=\"submit\">Register</CustomButton>\r\n                </form>\r\n    )\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     signUp: userCredentials => dispatch(signUp(userCredentials))\r\n// }\r\n\r\nexport default Register;\r\n","C:\\Users\\david\\Desktop\\bookface\\src\\components\\custom-button\\custom-button.component.jsx",[],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\create-post\\create-post.component.jsx",["123","124"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport firebase from 'firebase';\r\nimport './create-post.styles.scss';\r\n\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nimport { firestore } from '../../firebase/firebase.utils';\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\r\n\r\nimport { createPostStart } from '../../redux/post/post.actions';\r\n\r\n\r\nconst CreatePost = ({ currentUser, createPostStart }) => {\r\n\r\n    const [fullPost, setFullPost] = useState({ post: \"\", imageUrl: \"\"});\r\n\r\n    const { post, imageUrl } = fullPost;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createPostStart(currentUser, fullPost)\r\n        setFullPost({ post: \"\", imageUrl: \"\"})\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFullPost({...fullPost, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPost\">\r\n            <div className=\"createPost__top\">\r\n                <Avatar src={currentUser.profileImgUrl}/>\r\n\r\n                <form>\r\n                    <input name=\"post\" value={post} type=\"text\" placeholder={`What's on your mind`} onChange={handleChange}/>\r\n                    <input name=\"imageUrl\" value={imageUrl} placeholder=\"Image URL\" onChange={handleChange} />\r\n                    <button type=\"submit\" onClick={handleSubmit}>Hidden Button</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"createPost__bottom\">\r\n                <div className=\"createPost__button\">\r\n                    <VideocamIcon style={{ color: \"red\" }}/>\r\n                    <h3>Live Video</h3> \r\n                </div>\r\n                <div className=\"createPost__button\">\r\n                    <PhotoLibraryIcon style={{ color: \"green\"}} />\r\n                    <h3>Photo/Video</h3>\r\n                </div>\r\n                <div className=\"createPost__button\">\r\n                    <InsertEmoticonIcon style={{ color: \"yellow\"}} />\r\n                    <h3>Feeling/Activity</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    createPostStart: (currentUser, fullPost) => dispatch(createPostStart({currentUser, fullPost}))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);\r\n","C:\\Users\\david\\Desktop\\bookface\\src\\components\\header\\header.component.jsx",["125","126","127","128"],"import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './header.component.styles.scss';\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport { auth } from '../../firebase/firebase.utils';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\n\r\nimport DropdownButton from '../dropdown-button/dropdown-button.component';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\r\n\r\nconst Header = ({ currentUser }) => (\r\n\r\n        <div className=\"header\">\r\n\r\n            <div className=\"header__left\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Facebook_f_logo_%282019%29.svg/1920px-Facebook_f_logo_%282019%29.svg.png\" />\r\n                <div className=\"header__input\">\r\n                    <SearchIcon />\r\n                    <input type=\"text\" placeholder=\"Search Facebook\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__middle\">\r\n                <div className=\"header__icon header__icon--active\">\r\n                    <HomeIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                    <VideoLabelIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                    <StorefrontIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                    <SupervisedUserCircleIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                    <SportsEsportsIcon fontSize=\"large\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <div className=\"header__user_info\">\r\n                    <Avatar src={currentUser.profileImgUrl} />\r\n                    <h4>{currentUser.firstName} {currentUser.lastName}</h4>\r\n                </div>\r\n\r\n                <IconButton>\r\n                    <AddIcon />\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                    <MessageIcon />\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                    <NotificationsIcon />\r\n                </IconButton>\r\n\r\n                {/* {\r\n                    currentUser ? ( <IconButton>\r\n                        <ExpandMoreIcon onClick={() => auth.signOut()} />\r\n                    </IconButton>) : ( <Redirect to=\"/login\" />)\r\n                } */}\r\n\r\n                <IconButton>\r\n                    <DropdownButton currentUser={currentUser} />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n \r\n)\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser\r\n})\r\nexport default connect(mapStateToProps)(Header);\r\n","C:\\Users\\david\\Desktop\\bookface\\src\\components\\image-upload\\image-upload.component.jsx",["129","130","131"],"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.types.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.actions.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\utils\\helperFunctions.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\post\\post.selectors.js",[],["132","133"],"C:\\Users\\david\\Desktop\\bookface\\src\\redux\\user\\user.sagas.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\post\\post.component.jsx",["134","135"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport Comment from '../comment/comment.component';\r\n\r\nimport { firestore } from '../../firebase/firebase.utils'\r\n\r\nimport './post.styles.scss';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\n\r\nconst Post = ({ id, currentUser, data: { userId, image, message, profilePic, timestamp, firstName, lastName, likes } }) => {\r\n\r\n    const [comment, setComment] = useState(\"\");\r\n    const [postCommentList, setPostCommentList ] = useState([]);\r\n    const [liked, setLiked] = useState(false);\r\n\r\n    const handleLike = () => {\r\n        \r\n        if(liked === false) {\r\n            firestore.collection('posts').doc(id).get().then(doc => {\r\n                const docData = doc.data();\r\n                \r\n                firestore.collection('posts').doc(id).collection('postLikes').doc(currentUser.id).set({\r\n                    currentUser: currentUser.id,\r\n                    firstName: currentUser.firstName,\r\n                    lastName: currentUser.lastName\r\n                })\r\n\r\n                    firestore.collection('posts').doc(id).update({\r\n                        likes: docData.likes + 1\r\n                    })\r\n\r\n            }\r\n            )\r\n            setLiked(!liked)\r\n        } else if (liked === true) { \r\n            firestore.collection('posts').doc(id).get().then(doc => {\r\n                const docData = doc.data()\r\n\r\n                firestore.collection('posts').doc(id).collection('postLikes').doc(currentUser.id).delete()\r\n\r\n                firestore.collection('posts').doc(id).update({\r\n                    likes: docData.likes - 1\r\n                })\r\n\r\n            })\r\n            setLiked(!liked)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setComment(e.target.value)\r\n    }\r\n    \r\n  \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        firestore.collection('posts').doc(id).collection('comments').add({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            comment: comment,\r\n            image: image,\r\n            id: id\r\n        })\r\n\r\n        setComment(\"\")\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        firestore.collection('posts').doc(id).collection('comments').onSnapshot((snapshot) => {\r\n            setPostCommentList(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        })\r\n\r\n    }, [postCommentList])\r\n  \r\n    return (\r\n        <div className=\"post\" id={id}>\r\n            <div className=\"post__top\">\r\n                <Avatar src={profilePic} className=\"post__avatar\"/>\r\n                <div className=\"post__topDetails\">\r\n                    <h3>{`${firstName} ${lastName}`}</h3>\r\n                    <p>{new Date(timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post__image\">\r\n                <img src={image} />\r\n            </div>\r\n\r\n            <div className=\"post__like\">\r\n                <p>{likes} Likes</p>\r\n            </div>\r\n\r\n            <div className=\"post__buttons\">\r\n                <div className=\"post__button\">\r\n                    <IconButton onClick={handleLike}>\r\n                        <ThumbUpIcon />\r\n                    </IconButton>\r\n                    <p>Like</p>\r\n                </div>\r\n                <div className=\"post__button\">\r\n                    <ChatBubbleIcon />\r\n                    <p>Comment</p>\r\n                </div>\r\n                <div className=\"post__button\">\r\n                    <ShareIcon />\r\n                    <p>Share</p>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                postCommentList.map((comment, id) => (\r\n                    <Comment id={id} comment={comment.data}/>\r\n                ))\r\n            }\r\n            <div className=\"post__comment\">\r\n                <Avatar src={profilePic} className=\"post__commentAvatar\"/>\r\n                <form>\r\n                    <input type=\"text\" placeholder=\"Write a comment...\" onChange={handleChange}/>\r\n                    <button type=\"submit\" onClick={handleSubmit}>Hidden Button</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(Post)\r\n","C:\\Users\\david\\Desktop\\bookface\\src\\redux\\user\\user.types.js",[],"C:\\Users\\david\\Desktop\\bookface\\src\\pages\\UserPage\\userpage.component.jsx",["136","137","138"],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\modal\\modal.component.jsx",[],"C:\\Users\\david\\Desktop\\bookface\\src\\App.js",["139","140","141","142","143"],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\comment\\comment.component.jsx",[],"C:\\Users\\david\\Desktop\\bookface\\src\\components\\avatar\\avatar.component.jsx",[],{"ruleId":"144","severity":1,"message":"145","line":1,"column":18,"nodeType":"146","messageId":"147","endLine":1,"endColumn":27},{"ruleId":"144","severity":1,"message":"148","line":1,"column":29,"nodeType":"146","messageId":"147","endLine":1,"endColumn":37},{"ruleId":"144","severity":1,"message":"149","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"144","severity":1,"message":"150","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},{"ruleId":"144","severity":1,"message":"151","line":7,"column":16,"nodeType":"146","messageId":"147","endLine":7,"endColumn":25},{"ruleId":"144","severity":1,"message":"152","line":3,"column":21,"nodeType":"146","messageId":"147","endLine":3,"endColumn":28},{"ruleId":"144","severity":1,"message":"150","line":3,"column":30,"nodeType":"146","messageId":"147","endLine":3,"endColumn":34},{"ruleId":"144","severity":1,"message":"153","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":25},{"ruleId":"144","severity":1,"message":"154","line":36,"column":15,"nodeType":"146","messageId":"147","endLine":36,"endColumn":28},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"144","severity":1,"message":"159","line":1,"column":39,"nodeType":"146","messageId":"147","endLine":1,"endColumn":47},{"ruleId":"144","severity":1,"message":"150","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"149","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":48,"column":72,"nodeType":"162","endLine":48,"endColumn":84},{"ruleId":"160","severity":1,"message":"161","line":49,"column":81,"nodeType":"162","endLine":49,"endColumn":96},{"ruleId":"160","severity":1,"message":"161","line":50,"column":95,"nodeType":"162","endLine":50,"endColumn":110},{"ruleId":"144","severity":1,"message":"163","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":16},{"ruleId":"144","severity":1,"message":"151","line":13,"column":10,"nodeType":"146","messageId":"147","endLine":13,"endColumn":19},{"ruleId":"144","severity":1,"message":"164","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"144","severity":1,"message":"150","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},{"ruleId":"144","severity":1,"message":"165","line":21,"column":8,"nodeType":"146","messageId":"147","endLine":21,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":29,"column":17,"nodeType":"168","endLine":29,"endColumn":161},{"ruleId":"144","severity":1,"message":"163","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":16},{"ruleId":"144","severity":1,"message":"169","line":13,"column":11,"nodeType":"146","messageId":"147","endLine":13,"endColumn":20},{"ruleId":"144","severity":1,"message":"170","line":16,"column":17,"nodeType":"146","messageId":"147","endLine":16,"endColumn":23},{"ruleId":"155","replacedBy":"171"},{"ruleId":"157","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":90,"column":8,"nodeType":"175","endLine":90,"endColumn":25,"suggestions":"176"},{"ruleId":"166","severity":1,"message":"167","line":107,"column":17,"nodeType":"168","endLine":107,"endColumn":36},{"ruleId":"144","severity":1,"message":"177","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":19},{"ruleId":"144","severity":1,"message":"178","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":20},{"ruleId":"144","severity":1,"message":"179","line":8,"column":22,"nodeType":"146","messageId":"147","endLine":8,"endColumn":28},{"ruleId":"144","severity":1,"message":"148","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"150","line":13,"column":10,"nodeType":"146","messageId":"147","endLine":13,"endColumn":14},{"ruleId":"144","severity":1,"message":"180","line":13,"column":16,"nodeType":"146","messageId":"147","endLine":13,"endColumn":41},{"ruleId":"144","severity":1,"message":"181","line":15,"column":10,"nodeType":"146","messageId":"147","endLine":15,"endColumn":24},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'connect' is defined but never used.","'auth' is defined but never used.","'firestore' is defined but never used.","'storage' is defined but never used.","'snapShotToArray' is defined but never used.","'createPostRef' is assigned a value but never used.","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'Fragment' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'firebase' is defined but never used.","'Redirect' is defined but never used.","'ExpandMoreIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'allInputs' is assigned a value but never used.","'setURL' is assigned a value but never used.",["182"],["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'ImageUpload' is defined but never used.","'IconButton' is defined but never used.","'Avatar' is defined but never used.","'createUserProfileDocument' is defined but never used.","'setCurrentUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},"Update the dependencies array to be: [id, postCommentList]",{"range":"187","text":"188"},[2797,2814],"[id, postCommentList]"]